# Use the official Gradle image
image: gradle:alpine

# Define global variables and caching settings
variables:
  RAILWAY_SERVICE_NAME: "banksoumya"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  JAVA_VERSION: 21
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  TOMCAT_URL: "http://192.168.0.109:8085/manager/text"
  TOMCAT_USER: "$admin"
  TOMCAT_PASS: "$admin"
  WAR_FILE: "build/libs/bank-1.war"
  DAST_WEBSITE: https://staging.example.com # DAST target website

# Cache settings to speed up builds
cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle
    - build

# Define the stages of the pipeline
stages:
  - build
  - test
  - postman_test
  - deploy

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
# Build stage
build:
  stage: build
  script:
    - gradle --version
    - gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle
      - build

# Test stage
test:
  stage: test
  script:
    - gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle
      - build

# Postman Test stage
postman_tests:
  stage: postman_test
  image: postman/newman:latest
  script:
    - newman run bankcollectionprod.postman_collection.json -r cli,json --reporter-json-export newman/report.json
  artifacts:
    paths:
      - newman/report.json

# Deploy to Railway
deploy-railway:
  stage: deploy
  image: ubuntu
  only:
    - pushes
    - main
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway up --service=$RAILWAY_SERVICE_NAME -d

# Include security templates for Dependency Scanning, SAST, Secret Detection, and DAST

